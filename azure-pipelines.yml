# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

# Assemble a debug APK
steps:
- task: Gradle@2
  inputs:
    workingDirectory: 'Repairs'
    gradleWrapperFile: 'Repairs/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

# Runs all unit tests
- task: Gradle@2
  inputs:
    workingDirectory: 'Repairs'
    gradleWrapperFile: 'Repairs/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'testDebugUnitTest'

# Create a JaCoCo code coverage report
- task: Gradle@2
  inputs:
    workingDirectory: 'Repairs'
    gradleWrapperFile: 'Repairs/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'jacocoTestReport'

# Publish code coverage results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    #codeCoverageTool: 'JaCoCo' # Options: cobertura, jaCoCo
    summaryFileLocation: '**/jacocoTestReport.xml'
    #pathToSources: # Optional
    reportDirectory: 'Repairs/app/build/reports/jacoco/jacocoTestReport/html'
    #additionalCodeCoverageFiles: # Optional
    #failIfCoverageEmpty: false # Optional

# Copy APK over to pipeline
- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
- task: PublishBuildArtifacts@1